services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
      - "8001:8001"

  api-gateway:
    build: ./api-gateway/
    container_name: api-gateway
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway/:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./api-gateway/.env

  upload-service:
    build: ./upload-service
    container_name: upload-service
    ports:
      - "3001:3001"
    volumes:
      - ./upload-service/:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
      - UPLOAD_JWT_SECRET=supersecret123

    depends_on:
      - redis
      - minio-service

  minio-service:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    command: server /data --console-address ":9001"
    volumes:
      - min_io:/data

  transcode-service:
    build: ./transcode-service
    container_name: transcode-service
    ports:
      - "3003:3003"
    volumes:
      - ./transcode-service/:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./transcode-service/.env
    depends_on:
      - redis

  streaming-service:
    build: ./streaming-service
    container_name: streaming-service
    ports:
      - "3004:3004"
    volumes:
      - ./streaming-service/:/app
    command: npm run dev
    env_file:
      - ./streaming-service/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    depends_on:
      - redis

  postgresql:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - pg_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  pg_data: {}
  min_io: {}
